/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A single Bubble action
 */
export type Action =
  | ContactAction
  | LocationAction
  | MediaAction
  | SideEffectAction
  | SleepAction
  | TemplateAction
  | TextAction
  | TypingAction
  | UserAttachmentAction
  | UserEventAction
  | UserLocationAction
  | UserMessageAction;
export type ContactAction = BaseAction & Contact;
export type As =
  | null
  | {
      first_name: string;
      last_name?: string;
      profile_picture?: string;
      user_id?: string;
      [k: string]: unknown;
    }
  | {
      user_id: string;
      [k: string]: unknown;
    };
export type Any =
  | string
  | number
  | {
      [k: string]: unknown;
    }
  | unknown[]
  | boolean
  | null;
export type Visibility = "external" | "internal" | "embedded";
export type LocationAction = BaseAction & Location;
export type MediaAction = BaseAction & Media;
export type QuickReplies = {
  content_type: "text" | "location";
  title?: string;
  [k: string]: unknown;
}[];
export type SideEffectAction = BaseAction & SideEffect;
export type SleepAction = BaseAction & Sleep;
export type TemplateAction = BaseAction & Template;
export type TextAction = BaseAction & Text;
export type TypingAction = BaseAction & Typing;
export type UserAttachmentAction = BaseAction & UserAttachment;
export type UserEventAction = BaseAction & UserEvent;
export type UserLocationAction = BaseAction & UserLocation;
export type UserMessageAction = BaseAction & UserMessage;

/**
 * When a message is deleted, the `payload` will be null.
 */
export interface BaseAction {
  as: As;
  delay: null | "infinity" | number;
  id: string | null;
  metadata?: {
    [k: string]: unknown;
  } | null;
  payload: Any;
  sender: string | null;
  time:
    | string
    | {
        [k: string]: unknown;
      }
    | null;
  type: string;
  visibility?: Visibility;
}
export interface Contact {
  payload: {
    addresses?: {
      city?: null | string;
      country?: null | string;
      country_code?: null | string;
      state?: null | string;
      street?: null | string;
      type?: null | string;
      zip?: null | string;
      [k: string]: unknown;
    }[];
    birthday?: string;
    emails?: {
      email?: string;
      type?: string;
      [k: string]: unknown;
    }[];
    metadata?: {
      [k: string]: unknown;
    };
    name?: {
      first_name?: null | string;
      formatted_name?: null | string;
      last_name?: null | string;
      middle_name?: null | string;
      prefix?: null | string;
      suffix?: null | string;
      [k: string]: unknown;
    };
    org?: {
      company?: null | string;
      department?: null | string;
      title?: null | string;
      [k: string]: unknown;
    };
    phones?: {
      metadata?: {
        [k: string]: unknown;
      };
      phone?: string;
      type?: string;
      [k: string]: unknown;
    }[];
    urls?: {
      type?: string;
      url?: string;
      [k: string]: unknown;
    }[];
  };
  type: "contact";
  [k: string]: unknown;
}
export interface Location {
  payload: {
    lat: number;
    lon: number;
  };
  type: "location";
  [k: string]: unknown;
}
export interface Media {
  payload: {
    alt?: string;
    caption?: string;
    class?: string;
    kind: "web" | "audio" | "video" | "image" | "file";
    preview_image?: string;
    quick_replies?: QuickReplies;
    size?: number;
    url: string;
  };
  type: "media";
  [k: string]: unknown;
}
export interface SideEffect {
  payload:
    | {
        data: {
          message: string;
          payload: null | {
            [k: string]: unknown;
          };
          type: string;
        };
        type: "annotation";
      }
    | {
        data: {
          tag: string;
        };
        type: "tag" | "untag";
      }
    | {
        [k: string]: unknown;
      };
  type: "side_effect";
  [k: string]: unknown;
}
export interface Sleep {
  payload: boolean;
  type: "sleep";
  [k: string]: unknown;
}
export interface Template {
  payload: {
    class?: string;
    [k: string]: unknown;
  };
  type: "template";
  [k: string]: unknown;
}
export interface Text {
  payload: {
    class?: string;
    message: string;
    quick_replies?: QuickReplies;
    /**
     * The values passed to `:speech_hints` is not validated, and may therefore be anything.
     * It will usually be a list of strings.
     *
     */
    speech_hints?:
      | string
      | number
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | boolean
      | null;
  };
  type: "text";
  [k: string]: unknown;
}
export interface Typing {
  payload: boolean;
  type: "typing";
  [k: string]: unknown;
}
export interface UserAttachment {
  payload: {
    caption: null | string;
    from: null | As;
    id: null | string;
    metadata: {
      [k: string]: unknown;
    };
    type: "audio" | "video" | "image" | "file";
    url: string;
  };
  type: "user_attachment";
  [k: string]: unknown;
}
export interface UserEvent {
  payload: {
    __struct__?: "Elixir.Bubble.Event";
    name: string;
    payload: Any;
    sender: null | string;
  };
  type: "user_event";
  [k: string]: unknown;
}
export interface UserLocation {
  payload: {
    lat: number;
    lon: number;
  };
  type: "user_location";
  [k: string]: unknown;
}
export interface UserMessage {
  payload: {
    __struct__?: "Elixir.Bubble.Message";
    captures?: {
      [k: string]: unknown;
    };
    data?: Any;
    from?: Any;
    id?: null | string;
    input_type?: string;
    intent?: Any;
    locale?: null | string;
    metadata?: Any;
    sentiment?: Any;
    sents?: {
      __struct__: "Elixir.BubbleMatch.Sentence";
      text: string;
      tokenizations: {
        __struct__: "Elixir.BubbleMatch.Token";
        end: number;
        index: number;
        raw: string;
        start: number;
        type: string;
        value:
          | string
          | {
              [k: string]: unknown;
            };
      }[][];
    }[];
    stats?: Any;
    text?: string;
    training_label?: null | string;
    type?: string;
  };
  type: "user_message";
  [k: string]: unknown;
}
